DROP TABLE dishes
IF EXISTS;
DROP TABLE lunch_menu
IF EXISTS;
DROP TABLE restaurants
IF EXISTS;
DROP TABLE user_roles
IF EXISTS;
DROP TABLE users
IF EXISTS;

DROP SEQUENCE GLOBAL_SEQ
IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ
  AS INTEGER
  START WITH 100000;

CREATE TABLE users
(
  id         INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name       VARCHAR(255)            NOT NULL,
  email      VARCHAR(255)            NOT NULL,
  password   VARCHAR(255)            NOT NULL,
  registered TIMESTAMP DEFAULT now() NOT NULL,
  enabled    BOOLEAN DEFAULT TRUE    NOT NULL,
  id_lm_vote INTEGER DEFAULT NULL,
  role       VARCHAR(255)            NOT NULL
);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES users (id)
    ON DELETE CASCADE
);


CREATE TABLE restaurants
(
  id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name    VARCHAR(255) NOT NULL,
  address VARCHAR(255) NOT NULL
);


CREATE TABLE lunch_menu
(
  id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  id_rest INTEGER                     NOT NULL,
  date    DATE DEFAULT now()          NOT NULL,
  votes   INTEGER DEFAULT 0           NOT NULL,
  FOREIGN KEY (id_rest) REFERENCES restaurants (id)
    ON DELETE CASCADE

);

CREATE TABLE dishes
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  id_lunch_menu INTEGER      NOT NULL,
  name          VARCHAR(255) NOT NULL,
  price         DOUBLE       NOT NULL,
  FOREIGN KEY (id_lunch_menu) REFERENCES lunch_menu (id)
    ON DELETE CASCADE

);